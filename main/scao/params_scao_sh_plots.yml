---

main:
  root_dir:          './calib/SCAO'         # Root directory for calibration manager
  pixel_pupil:       160                    # Linear dimension of pupil phase array
  pixel_pitch:       0.05                   # [m] Pitch of the pupil phase array
  total_time:        0.050                  # [s] Total simulation running time
  time_step:         0.001                  # [s] Simulation time step


seeing:
  class:             'FuncGenerator'
  constant:          0.8                  # ["] seeing value
  func_type:         'SIN'                 # TODO necessary for factory.py line 217
  outputs: ['output']


wind_speed:
  class:             'FuncGenerator'
  constant:          [20.]                #,10.,20.,10.]      # [m/s] Wind speed value
  outputs: ['output']


wind_direction:
  class:             'FuncGenerator'
  constant:          [0.]#,270.,270.,90.]   # [degrees] Wind direction value
  outputs: ['output']


on_axis_source:
  class:             'Source'
  polar_coordinate:  [0.0, 0.0]           # [arcsec, degrees] source polar coordinates
  magnitude:         8                    # source magnitude
  wavelengthInNm:    750                   # [nm] wavelength


pupilstop:                                 # Default parameters (circular pupil)
  class: 'Pupilstop'


atmo:
  class:                'AtmoEvolution'
  L0:                   40                   # [m] Outer scale
  heights:              [119.] #,837,3045,12780]), # [m] layer heights at 0 zenith angle
  Cn2:                  [0.70] #,0.06,0.14,0.10]), # Cn2 weights (total must be eq 1)
  source_dict_ref:      ['on_axis_source']
  inputs:
    seeing: 'seeing.output'
    wind_speed: 'wind_speed.output'
    wind_direction: 'wind_direction.output'
  outputs: ['layer_list']


prop:
  class:                'AtmoPropagation'
  source_dict_ref:      ['on_axis_source']
  inputs:
    layer_list: ['atmo.layer_list',
                  'pupilstop',
                  'dm.out_layer:-1']
  outputs: ['out_on_axis_source_ef']
  
sh:
  class:             'SH'
  subap_wanted_fov:  1.2                     # Requested field-of-view [arcsec]
  sensor_pxscale:    0.15                     # Pixel scale in arcsec/pix
  subap_npx:         6                       # Output sampling [usually corresponding to CCD pixels]
  subap_on_diameter: 20                      # Number of subapertures in diameter
  wavelengthInNm:    750                     # [nm] Pyramid wavelength
  inputs:
    in_ef: 'prop.out_on_axis_source_ef'
  outputs:  ['out_i']


detector:
  class:             'CCD'
  size:              [120,120]                 # Detector size in pixels
  dt:                0.001                   # [s] Detector integration time
  bandw:             300                     # [nm] Sensor bandwidth
  photon_noise:      True                    # activate photon noise
  readout_noise:     True                    # activate readout noise
  readout_level:     1.0                     # readout noise in [e-/pix/frame]
  quantum_eff:       0.32                    # quantum efficiency * total transmission
  inputs:
    in_i: 'sh.out_i'
  outputs:  ['out_pixels']


slopec:
  class:             'ShSlopec'
  subapdata_object:  'scao_subaps_n20_th0.5'  # tag of the pyramid WFS pupils
  sn_object:         'scao_sn'                # tag of the slope reference vector
  inputs:
    in_pixels:        'detector.out_pixels'
  outputs:  ['out_slopes', 'out_subapdata']

rec:
  class:              'Modalrec'
  recmat_object:      'scao_sh_rec5'         # reconstruction matrix tag
  inputs:
    in_slopes:        'slopec.out_slopes'
  outputs:  ['out_modes', 'out_pseudo_ol_modes', 'out_modes_first_step']


control:
  class:             'IntControl'
  delay:             2                      # Total temporal delay in time steps
  int_gain:          [0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5, # Integrator gain (for 'INT' control)
                      0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,
                      0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,
                      0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,
                      0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,
                      0.5,0.5,0.5,0.5]  
  inputs:
      delta_comm: 'rec.out_modes'     
  outputs:  ['out_comm']


dm:
  class:             'DM'
  type_str:          'zernike'              # modes type
  nmodes:            54                     # number of modes
  npixels:           160                    # linear dimension of DM phase array
  obsratio:          0.1                    # obstruction dimension ratio w.r.t. diameter
  height:            0                      # DM height [m]
  inputs:
      in_command: 'control.out_comm'
  outputs:  ['out_layer']


psf:
  class:             'PSF'
  wavelengthInNm:    1650                 # [nm] Imaging wavelength
  nd:                8                    # padding coefficient for PSF computation
  start_time:        0.05                # PSF integration start time
  inputs:
      in_ef:  'prop.out_on_axis_source_ef'
  outputs:  ['out_psf', 'out_sr']


sc_disp:
  class:            'SlopecDisplay'
  inputs:
  inputs:
    slopes:       'slopec.out_slopes'
    subapdata:    'slopec.out_subapdata'
    pixels:       'detector.out_pixels'
  disp_factor:      4
sr_disp:
  class:            'PlotDisplay'
  inputs:
    value:       'psf.out_sr'
  window:           11
  title:            'SR'
ph_disp:
  class:            'PhaseDisplay'
  inputs:
    phase:       "prop.out_on_axis_source_ef"
  window:           12
  title:            'PUPIL PHASE'
  disp_factor:      2
dm_disp:
  class:            'PhaseDisplay'
  inputs:
    phase:       "dm.out_layer"
  window:           13
  title:            'DM'
  disp_factor:      2
psf_disp:
  class:            'PsfDisplay'
  inputs:
    psf:       "psf.out_psf"
  window:           14
  title:            'PSF'
  disp_factor:      2
cmd_disp:
  class:            'ModesDisplay'
  inputs:
    modes:       "rec.out_modes"
  window:           16
  title:            'rec.out_modes'
  disp_factor:      2

data_store:
  class:             'DataStore'
  store_dir:         './output'             # Data result directory: 'store_dir'/TN/
  inputs:    
    res_ef: 'prop.out_on_axis_source_ef'
